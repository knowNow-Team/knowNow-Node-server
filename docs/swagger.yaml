tags:
- name: wordbooks
  description: wordbooks API
- name: words
  description: words API
- name: tests
  description: tests API

paths:
# [GET] v1/words/wordId
  /v1/words/{wordId}:
    get:
      tags:
      - words
      summary: Find words by Id
      parameters:
      - name: wordId
        in: path
        description: word Id
        required: true
        type: string
      responses: 
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/word'
        500:
          description: 'Server Error'
    # put:
    #   tags:
    #   - words
    #   summary: Update word by Id
    #   parameters:
    #   - name: wordId
    #     in: path
    #     description: word Id
    #     required: true
    #     type: string
    #   - name: meanings
    #     in: body
    #     type: array
    #   - name: wordClasses
    #     in: body
    #     type: string
    #     enum: [nouns, pronouns, verbs, adverbs, adjective, articles, prepositions, conjunctions, interjections]
    #   - name: pronounceVoicePath
    #     in: body
    #     type: string
    #   - name: phonics
    #     in: body
    #     type: string
    #   responses: 
    #     200:
    #       description: 'OK'
    #       schema:
    #         $ref: '#/definitions/word'
    #     500:
    #       description: 'Server Error'

# [post] v1/words/list
  v1/words/list:
    post:
      tags:
      - words
      summary: Add word
      parameters:
      - name: wordNames
        in: body
        type: array
        example: [apple, banana]
        required: true
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] v1/wordbooks
  /v1/wordbooks:
    get:
      tags:
      - wordbooks
      summary: Find All Wordbooks
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
        type: integer
      responses: 
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/wordbook'
        500:
          description: 'Server Error'
    post:
      tags:
      - wordbooks
      summary: Add Wordbook
      parameters:
      - name: title
        in: body
        description: Wordbook title that needs to be added to the wordbook
        required: true
      - name: owner
        in: body
        description: Wordbook owner that needs to be added to the wordbook
        required: true
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] v1/wordbooks/words
  /v1/wordbooks/words:
    get:
      tags:
      - wordbooks
      summary: Find a word in the duplicate selection wordbooks
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
        type: integer
        example: 1
      - name: wordbookIds
        in: query
        description: ID of the wordbooks you want to select
        required: true
        type: string
        example: aaaaaaaa,bbbbbbbb
      responses: 
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/wordbook'
        500:
          description: 'Server Error'

# [GET] v1/wordbooks/trashwordbooks
  /v1/wordbooks/trashwordbooks:
    get:
      tags:
      - wordbooks
      summary: Find removed words
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
        type: integer
        example: 1
      responses: 
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/wordbook'
        500:
          description: 'Server Error'

# [put] v1/wordbooks/trashwordbooks/wordbookId
  /v1/wordbooks/trashwordbooks/{wordbookId}:
    put:
      tags:
      - wordbooks
      summary: Word Recovery from trashwordbook
      parameters:
      - name: wordbookId
        in: path
        description: wordbook Id
        required: true
        type: string
      - name: userId
        in: body
        description: user Id
        required: true
        type: integer
      responses: 
        200:
          description: 'OK'
          schema:
            $ref: '#/definitions/wordbook'
        500:
          description: 'Server Error'

# [DELETE] v1/wordbooks/trashwordbooks/wordId
    delete:
      tags: 
      - wordbooks
      summary: Delete a word from the trashwordbook
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
      - name: wordId
        in: path
        description: word Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [GET] v1/wordbooks/wordbookId
  /v1/wordbooks/{wordbookId}:
    get:
      tags:
      - wordbooks
      summary: Find Wordbook By Id
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
        type: integer
      - name: wordbookId
        in: path
        description: wordbook Id
        required: true
        type: string
      responses: 
        200:
          description: 'OK'
          schema: 
            $ref: "#/definitions/wordbook"
        500:
          description: 'Server Error'

#[PUT] v1/wordbooks/wordbookId
    put:
      tags:
      - wordbooks
      summary: Update wordbook title
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
        type: integer
      - name: title
        in: body
        description: Title to change
        required: true
        type: string
      - name: wordbookId
        in: path
        description: wordbook Id
        required: true
        type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# [PUT] v1/wordbooks/wordbookId/wordId
  /v1/wordbooks/{wordbookId}/{wordId}:
    put:
      tags:
      - wordbooks
      summary: Update word filter
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
        type: integer
        example: 1
      - name: filter
        in: body
        description: filter wanted change
        required: true
        type: string
        enum: [doNotKnow, memorized, confused]
        example: doNotKnow
      - name: wordbookId
        in: path
        description: wordbook Id
        required: true
        type: string
      - name: wordId
        in: path
        description: word Id
        required: true
        type: string
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

#[DELETE] v1/wordbooks/wordbookId
    delete:
      tags:
      - wordbooks
      summary: Delete wordbook
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
      - name: wordbookId
        in: path
        description: wordbook Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  
# [DELETE] v1/wordbooks/wordbookId/words/wordId
  v1/wordbooks/{wordbookId}/words/{wordId}:
    delete:
      tags:
      - wordbooks
      summary: Delete a word from the wordbook (move it to the trashwordbook)
      parameters:
      - name: userId
        in: body
        description: user Id
        required: true
      - name: wordbookId
        in: path
        description: wordbook Id
        required: true
      - name: wordId
        in: path
        description: word Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'


# definitions
definitions:
  wordbook:
    type: object
    required:
      - title
      - owner
      - words
    properties:
      _id: 
        type: string
        format: ObjectId
        description: wordbook Id
      title: 
        type: string
        description: wordbook title
      owner: 
        type: integer
        description: wordbook owner
      createdAt:
        type: string
        format: date-time
        description: wordbook created date
      updatedAt: 
        type: string
        format: date-time
        description: wordbook updated date
      words: 
        type: object
        properties:
          wordId:
            $ref: '#/definitions/word'
          isRemoved:
            type: boolean
            description: Whether to delete
          filter: 
            type: string
            enum: [doNotKnow, memorized, confused]
            description: word filtering
          addedAt: 
            type: string
            format: date-time
            description: word added date-time
      
  word: 
    type: object
    required:
      - word
      - meanings
      - wordClasses
      - phonics
      - pronounceVoicePath
    properties:
      _id: 
        type: string
        format: ObjectId
        description: word Id
      word: 
        type: string
        description: word
      wordClasses:
        type: string
        enum: [nouns, pronouns, verbs, adverbs, adjective, articles, prepositions, conjunctions, interjections]
      phonics:
        type: string
        description: word phonics
      pronounceVoicePath: 
        type: string
        description: word pronounceVoicePath

  test:
    type: object
    required:
    - testerId
    - difficulty
    - filter
    - score
    - wordTotalCount
    - correctAnswerCount
    - wordbooks
    - words
    properties:
      _id: 
        type: string
        format: ObjectId
      testerId: 
        type: integer
      filter:
        type: string
        enum: [doNotKnow, memorized, confused]
      score:
        type: string
      wordTotalCount:
        type: integer
      correctAnswerCount: 
        type: integer
      wordbooks:
        type: array
      words: 
        type: object
        properties:
          wordId:
            $ref: '#/definitions/word'
          isCorrect:
            type: boolean
          answer:
            type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time

schemes:
  - https
  - http
